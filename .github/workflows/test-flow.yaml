name: Tests
on:
  workflow_call:
    inputs:
      from:
        required: true
        type: string
      templatePrefix:
        required: true
        type: string

# This will cancel in progress jobs if another job with the same ref gets started.
# Github run_id is a backup in case github.ref doesn't exist for some reason
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  ci-checks:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      # TODO: caching this action would accelerate the run
      - name: corepack
        run: |
          corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: package-lock.json
      - name: install
        run: |
          npm ci
      - name: commit-linting
        run: |
          if [[ "${{ github.base_ref }}" != "" ]]; then
            echo "Setting up git environment for commitlint of pull request"
            git fetch origin ${{ github.base_ref }}
            git fetch ${{ github.event.pull_request.head.repo.clone_url }} ${{ github.head_ref }}
            npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose
          else
            echo "Setting up git environment for commitlint of branch push"
            git fetch origin ${{ github.ref_name }} --unshallow
            npx commitlint --from $(git rev-list --max-parents=0 origin/${{ github.ref_name }})
          fi
      - name: linting
        run: |
          npm run lint
          npm run format

  int-test:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      # Create git client with PAT that has access to the private template
      - uses: actions/checkout@v4
      - name: install
        run: |
          npm ci
      - name: setup-pkgtest
        id: pkgtest-setup
        uses: ./
      - name: pkgtest
        run: |
          npx pkgtest --onWindowsProblems skip
      - name: Archive logs on failure
        # since we're testing just always try an upload
        # if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pkgtest-log-files-${{ matrix.pkgManager }}-${{ matrix.os }}-${{ matrix.node-version }}
          path: ${{ steps.pkgtest-setup.outputs.collect_log_file_folder }}
          retention-days: 1
          include-hidden-files: true
  # easy to require end cap job
  done:
    needs:
      - ci-checks
      - int-test
    runs-on: ubuntu-latest
    name: Done
    steps:
      - run: exit 1
        if: ${{ always() && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled')) }}
